package com.sdase.malware.utils;

import com.sdase.malware.interfaces.FileProcessor;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.io.FileUtils;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;
import org.springframework.stereotype.Component;

import java.io.*;
import java.net.URL;
import java.net.URLConnection;

@Slf4j
@Component
public class FileLoader implements FileProcessor {

    private String FILE_NAME="DEMO_FILE.pdf";

    @Override
    public String loadFileFromUrl(String URL_LINK) {
        String IBAN="";
        try{
            URL url = new URL(URL_LINK);
            URLConnection connection = url.openConnection();

            if(connection.getContentType().equalsIgnoreCase("application/pdf")){
                log.info("SYSTEM WILL PROCEED TO DOWNLOAD PDF..."+url.getFile());
                FileUtils.copyURLToFile(connection.getURL(),
                        new File(FILE_NAME));
            }else{
                throw new RuntimeException("The URL does not contain a pdf file");
            }

            log.info("PDF FILE DOWNLOADED");
            log.info("STARTING THE EXTRACTION OF THE IBAN FROM THE PDF FILE");

            IBAN = extractIbanFromPDF(new File("DEMO_FILE.pdf")).trim();

        }catch (Exception e){
            log.error("exception occurred {}"+e.getMessage());
            throw new RuntimeException("Internal exception occurred, please try again later");
        }
       return IBAN;
    }

    @Override
    public String extractIbanFromPDF(File file) {

        String IBAN="";
        try {
            PDDocument document = PDDocument.load(file);
            StringBuilder sb = new StringBuilder();
            PDFTextStripper stripper = new PDFTextStripper();
            //stripping text from page 2 and 3 only
            stripper.setStartPage(2);
            stripper.setEndPage(3);

            String text = stripper.getText(document);

            //Check if the text contains IBAN.. if yes, get the substring if the IBAN to get
            // one IBAN since the ibans on all the documents are the same
            if(text.contains("IBAN")){
                int indexOfIban = text.indexOf("IBAN");
                IBAN = text.substring(indexOfIban, indexOfIban+35).trim();
            }else {
                log.error("The document does not contain IBAN");
                throw new RuntimeException("Document does not contain IBAN, Process will terminate now");
            }

            document.close();
        }catch(Exception e){
            log.error("exception occurred {}"+e.getMessage());
            throw new RuntimeException("Internal exception occurred, please try again later");
        }
        return IBAN;
    }

}
